name: SAST

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  semgrep-sast:
    name: Semgrep SAST
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python & JQ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          python3 -m pip install --upgrade pip
          python3 -m pip install "semgrep>=1.57.0"

      - name: Run Semgrep (JSON)
        run: |
          mkdir -p reports
          semgrep \
            --config p/ci \
            --config p/cwe-top-25 \
            --config p/owasp-top-ten \
            --include '**/*.cc' \
            --include '**/*.cxx' \
            --include '**/*.cpp' \
            --include '**/*.h' \
            --include '**/*.html' \
            --include '**/*.hpp' \
            --include '**/*.js' \
            --exclude '**/node_modules/**' \
            --exclude '**/dist/**' \
            --exclude '**/build/**' \
            --exclude '**/vendor/**' \
            --json -o reports/semgrep.json || true

      - name: Run Semgrep (SARIF)
        run: |
          semgrep \
            --config p/ci \
            --config p/cwe-top-25 \
            --config p/owasp-top-ten \
            --include '**/*.cc' \
            --include '**/*.cxx' \
            --include '**/*.cpp' \
            --include '**/*.h' \
            --include '**/*.html' \
            --include '**/*.hpp' \
            --include '**/*.js' \
            --exclude '**/node_modules/**' \
            --exclude '**/dist/**' \
            --exclude '**/build/**' \
            --exclude '**/vendor/**' \
            --sarif -o reports/semgrep.sarif || true

      - name: Build MD summary
        run: |
          total=$(jq '.results | length' reports/semgrep.json 2>/dev/null || echo 0)
          critical=$(jq '[.results[] | select(.extra.severity=="CRITICAL")] | length' reports/semgrep.json 2>/dev/null || echo 0)
          high=$(jq '[.results[] | select(.extra.severity=="HIGH")] | length' reports/semgrep.json 2>/dev/null || echo 0)
          medium=$(jq '[.results[] | select(.extra.severity=="MEDIUM")] | length' reports/semgrep.json 2>/dev/null || echo 0)
          low=$(jq '[.results[] | select(.extra.severity=="LOW")] | length' reports/semgrep.json 2>/dev/null || echo 0)

          {
            echo "# Semgrep SAST Summary"
            echo ""
            echo "| Total | Critical | High | Medium | Low |"
            echo "|------:|---------:|-----:|-------:|----:|"
            echo "| $total | $critical | $high | $medium | $low |"
            echo ""
            echo "## Findings (Top 100)"
            echo ""
            echo "| Severity | Rule | File:Line | Message |"
            echo "|---------|------|-----------|---------|"
            jq -r '
              .results[:100][] |
              [
                (.extra.severity // "UNKNOWN"),
                (.check_id // "N/A"),
                ((.path // "N/A") + ":" + ((.start.line|tostring) // "0")),
                (.extra.message|gsub("\\|"; "\\\\|") // "N/A")
              ] | "| " + (join(" | ")) + " |"
            ' reports/semgrep.json 2>/dev/null || true
          } > reports/semgrep_summary.md

          cat reports/semgrep_summary.md >> "$GITHUB_STEP_SUMMARY"

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/semgrep.sarif

      - name: Upload full reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sast-reports
          path: reports/
          if-no-files-found: warn